{"ast":null,"code":"var _jsxFileName = \"/Users/horsehead/Desktop/chart-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const apiKey = \"b9c4cfc5fb5c3c2c530f6714a8e9c89f\"; // OpenWeather API anahtarınızı buraya ekleyin\n    const cityName = \"Ankara\";\n\n    // Geçmiş 1 haftalık hava durumu verilerini almak için API'ye istek gönderin\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`).then(response => {\n      // API'den gelen hava durumu verilerini alın ve Kelvin'i Celsius'a çevirin\n      const dailyData = [];\n      const rawData = response.data.list;\n      let currentDate = rawData[0].dt_txt.split(\" \")[0];\n      let dailyTemperatureSum = 0;\n      let dailyDataPointCount = 0;\n      for (let i = 0; i < rawData.length; i++) {\n        const item = rawData[i];\n        const itemDate = item.dt_txt.split(\" \")[0];\n        if (itemDate === currentDate) {\n          dailyTemperatureSum += item.main.temp - 273.15;\n          dailyDataPointCount++;\n        } else {\n          dailyData.push({\n            dt_txt: currentDate,\n            main: {\n              temp: (dailyTemperatureSum / dailyDataPointCount).toFixed(2) // Günlük ortalama sıcaklık (Kelvin'den Celsius'a çevrildi)\n            }\n          });\n\n          currentDate = itemDate;\n          dailyTemperatureSum = item.main.temp - 273.15;\n          dailyDataPointCount = 1;\n        }\n      }\n      setWeatherData(dailyData);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"API isteği sırasında hata oluştu:\", error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ankara Hava Durumu (Ge\\xE7mi\\u015F 1 Hafta)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Veri y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: weatherData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"dt_txt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"main.temp\",\n            name: \"S\\u0131cakl\\u0131k (\\xB0C)\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rBlukbKGc17fZDbgJ0yDKtB0+fk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","loading","setLoading","apiKey","cityName","get","then","response","dailyData","rawData","data","list","currentDate","dt_txt","split","dailyTemperatureSum","dailyDataPointCount","i","length","item","itemDate","main","temp","push","toFixed","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","type","name","stroke","_c","$RefreshReg$"],"sources":["/Users/horsehead/Desktop/chart-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const apiKey = \"b9c4cfc5fb5c3c2c530f6714a8e9c89f\"; // OpenWeather API anahtarınızı buraya ekleyin\n    const cityName = \"Ankara\";\n\n    // Geçmiş 1 haftalık hava durumu verilerini almak için API'ye istek gönderin\n    axios\n      .get(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`)\n      .then((response) => {\n        // API'den gelen hava durumu verilerini alın ve Kelvin'i Celsius'a çevirin\n        const dailyData = [];\n        const rawData = response.data.list;\n        let currentDate = rawData[0].dt_txt.split(\" \")[0];\n        let dailyTemperatureSum = 0;\n        let dailyDataPointCount = 0;\n\n        for (let i = 0; i < rawData.length; i++) {\n          const item = rawData[i];\n          const itemDate = item.dt_txt.split(\" \")[0];\n\n          if (itemDate === currentDate) {\n            dailyTemperatureSum += item.main.temp - 273.15;\n            dailyDataPointCount++;\n          } else {\n            dailyData.push({\n              dt_txt: currentDate,\n              main: {\n                temp: (dailyTemperatureSum / dailyDataPointCount).toFixed(2), // Günlük ortalama sıcaklık (Kelvin'den Celsius'a çevrildi)\n              },\n            });\n\n            currentDate = itemDate;\n            dailyTemperatureSum = item.main.temp - 273.15;\n            dailyDataPointCount = 1;\n          }\n        }\n\n        setWeatherData(dailyData);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"API isteği sırasında hata oluştu:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Ankara Hava Durumu (Geçmiş 1 Hafta)</h1>\n      {loading ? (\n        <p>Veri yükleniyor...</p>\n      ) : (\n        <div>\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <LineChart data={weatherData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"dt_txt\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"main.temp\"\n                name=\"Sıcaklık (°C)\"\n                stroke=\"#8884d8\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}